syntax = "proto3";

option go_package = "genproto/auth";

package auth;

service DashboardService {
    // rpc GetDailyPersonalAccessCount(AccessCountReq) returns (AccessCountRes);
    // rpc GetDailyPersonalBookingRevenueByDay(BookingRevenueReq) returns (BookingRevenueRes);
    // rpc GetDailyAccessCountBySubscriptionID(SubscriptionCountReq) returns (SubscriptionCountRes);
    // rpc GetDailyBookingRevenueBySubscriptionID(BookingRevenueBySubscriptionReq) returns (BookingRevenueBySubscriptionRes);
    rpc TotalMen(TotalMenReq) returns (TotalMenRes);
    rpc TotalWomen(TotalWomenReq) returns (TotalWomenRes);
    rpc TotalMembers(TotalMembersReq) returns (TotalMembersRes);
    rpc TotalAmount(TotalAmountReq) returns (TotalAmountRes);
    rpc CompareCurrentAndPreviousMonthRevenue(Void) returns (RevenueReq);
    rpc GetMonthlyRevenueStats(Void) returns (MonthlyRevenueRes);
    rpc GetGenderCounts(TotalGenderReq) returns (GenderCountsRes);
    rpc GetRevenueByTariff(Void) returns (TariffRevenueRes);
    rpc GetUsersByTariff(Void) returns (TariffUsersRes); 
}

// message AccessCountReq {
//     string gymId = 1;
//     string startDate = 2;
//     string endDate = 3;
// }

// message AccessCount {
//     string accessDate = 1;
//     int32 accessCount = 2;
// }

// message AccessCountRes {
//     repeated AccessCount accessCountList = 1;
// }

// message BookingRevenueReq {
//     string gymId = 1;
//     string startDate = 2;
//     string endDate = 3;
// }

// message BookingRevenue{
//     string bookingDate = 1;
//     float averageRevenue = 2;
// }

// message BookingRevenueRes {
//     repeated BookingRevenue bookingRevenueList = 1;
// }

// message SubscriptionCountReq {
//     string subscriptionID = 1;
//     string startDate = 2;
//     string endDate = 3;
// }

// message SubscriptionCount{
//     string accessDate = 1;
//     int32 accessCount = 2;
// }

// message SubscriptionCountRes {
//     repeated SubscriptionCount subscriptionCountList = 1;
// }

// message BookingRevenueBySubscriptionReq {
//     string subscriptionID = 1;
//     string startDate = 2;
//     string endDate = 3;
// }

// message BookingRevenueBySubscription{
//     string bookingDate = 1;
//     float averageRevenue = 2;
// }

// message BookingRevenueBySubscriptionRes {
//     repeated BookingRevenueBySubscription bookingRevenueBySubscriptionList = 1;
// }

message TotalMenReq {
    string gymId = 1;
}

message TotalMen {
    int32 totalMen = 1;
    string gender = 2;  // This is fine if you want to keep track of gender types
}

message TotalMenRes {
    repeated TotalMen totalMenList = 1;
}

message TotalWomenReq {
    string gymId = 1;
}

message TotalWomen {
    int32 totalWomen = 1;
    string gender = 2;
}

message TotalWomenRes {
    repeated TotalWomen totalWomenList = 1;
}


message TotalMembersReq {
    string gymId = 1;
}

message TotalMembers {
    int32 totalMembers = 1;
}

message TotalMembersRes {
    repeated TotalMembers totalMembersList = 1;
}


message TotalAmountReq {
    string gymId = 1;
}

message TotalAmount {
    float totalAmount = 1;
}

message TotalAmountRes {
    repeated TotalAmount totalAmountList = 1;
}

message Void {}

message RevenueReq {
    float percentageChange = 1;
}

message MonthlyRevenue {
    int32 year = 1;
    int32 month = 2;
    float amount = 3;
}
    
message MonthlyRevenueRes {
    repeated MonthlyRevenue monthlyRevenue = 1;
}

message TotalGenderReq {
    string gymId = 1;
    string startDate = 2;
    string endDate = 3;
}

message GenderCountsRes {
    int32 totalMen = 1;
    int32 totalWomen = 2;
}

message TariffAmount {
    string tariffName = 1;
    float amount = 2;
}

message TariffRevenueRes {
    repeated TariffAmount tariffAmounts = 1;
}

message TariffUsers {
    string tariffName = 1;
    int32 numOfUsers = 2;
}

message TariffUsersRes {
    repeated TariffUsers tariffUsers = 1;
}
